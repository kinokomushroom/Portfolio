[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=151]

[sub_resource type="VisualShaderNodeTexture" id=152]
source = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=153]
uniform_name = "Video"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=154]
uniform_name = "Brightness"

[sub_resource type="VisualShaderNodeVectorOp" id=155]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform float Brightness;
uniform sampler2D Video : hint_black_albedo;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Brightness;

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(Video, UV.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out5p0) * n_out4p0;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// VectorOp:2
	vec3 n_out2p0 = n_out6p0 + n_out3p0;

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -656, -29.2 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 151 )
nodes/fragment/2/position = Vector2( 130, 157 )
nodes/fragment/3/node = SubResource( 152 )
nodes/fragment/3/position = Vector2( -140, 320 )
nodes/fragment/4/node = SubResource( 153 )
nodes/fragment/4/position = Vector2( -360, 100 )
nodes/fragment/5/node = SubResource( 154 )
nodes/fragment/5/position = Vector2( -320, 0 )
nodes/fragment/6/node = SubResource( 155 )
nodes/fragment/6/position = Vector2( -60, 60 )
nodes/fragment/connections = PoolIntArray( 3, 1, 0, 1, 2, 0, 0, 0, 3, 0, 2, 1, 5, 0, 6, 0, 4, 0, 6, 1, 6, 0, 2, 0 )
