[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeTexture" id=198]
source = 2

[sub_resource type="VisualShaderNodeInput" id=199]
input_name = "screen_uv"

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -426, 58 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 198 )
nodes/fragment/2/position = Vector2( 120, 140 )
nodes/fragment/3/node = SubResource( 199 )
nodes/fragment/3/position = Vector2( -140, 180 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 0, 0, 0 )
